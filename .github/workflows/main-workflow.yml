name: Build code, run unit test, run SAST, SCA, DAST security scans
on: push

jobs:
  horusec:
    runs-on: ubuntu-latest
    name: Horusec SAST Scan
    steps:
      - uses: actions/checkout@v3

      - name: Run Horusec
        id: run_horusec
        uses: fike/horusec-action@v0.2.2
        with:
          arguments: -c=horusec-config.json -p ./

  build:
    runs-on: ubuntu-latest
    needs: horusec
    name: Run SAST SonarCloud scan on the source code
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven cloud
      run:  mvn -B verify sonar:sonar -Dsonar.projectKey=githubactionsdevsecops -Dsonar.organization=githubactionsdevsecops -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
  security:
    runs-on: ubuntu-latest
    needs: build
    name: Run the SCA Snyk scan on the source code
    steps:
      - uses: actions/checkout@master
      - name: RunSnyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          
  scanning:
    name: GitGuardian scan
    runs-on: ubuntu-latest
    needs: security
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all history so multiple commits can be scanned. Utile anche per Sonarcloud
      - name: GitGuardian scan
        uses: GitGuardian/ggshield-action@v1.18.1
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA:  ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
          
  zap-dast-scan:
    runs-on: ubuntu-latest
    needs: security
    name: Run DAST ZAP scan on the web application
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.6.1
        with:
          docker_name: 'owasp/zap2docker-stable'
          target: 'http://testphp.vulnweb.com/'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'

  nuclei-dast-scan:
    runs-on: ubuntu-latest
    needs: zap-dast-scan
    steps:
      - uses: actions/checkout@v2
      
      - name: Nuclei - Vulnerability Scan
        uses: projectdiscovery/nuclei-action@main
        with:
          #target: https://example.com
          urls: urls.txt
          flags: "-severity critical,high,medium,low -stats"
          github-report: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: GitHub Workflow artifacts
        uses: actions/upload-artifact@v2
        with:
          name: nuclei.log
          path: nuclei.log

      - name: GitHub Security Dashboard Alerts update
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: nuclei.sarif
